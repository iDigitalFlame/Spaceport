################################
### iDigitalFlame  2016-2024 ###
#                              #
#            -/`               #
#            -yy-   :/`        #
#         ./-shho`:so`         #
#    .:- /syhhhh//hhs` `-`     #
#   :ys-:shhhhhhshhhh.:o- `    #
#   /yhsoshhhhhhhhhhhyho`:/.   #
#   `:yhyshhhhhhhhhhhhhh+hd:   #
#     :yssyhhhhhyhhhhhhhhdd:   #
#    .:.oyshhhyyyhhhhhhddd:    #
#    :o+hhhhhyssyhhdddmmd-     #
#     .+yhhhhyssshdmmddo.      #
#       `///yyysshd++`         #
#                              #
########## SPACEPORT ###########
### Spaceport + SMD
## Netfilter Configuration
#
# Copyright (C) 2016 - 2024 iDigitalFlame
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

table ip nat {
    chain input {
        type    nat hook input          priority 100
        policy  accept
    }
    chain output {
        type    nat hook output         priority -100
        policy  accept
    }
    chain preroute {
        type    nat hook prerouting     priority -100
        policy  accept
    }
    chain postroute {
        type    nat hook postrouting    priority 100;
        policy  accept

        oifname !=  "vmi*"                                              counter masquerade
        oifname     "vmi0"                                              counter masquerade
    }
}
table inet filter {
    set VMNet {
        type    ipv4_addr
        flags   interval

        elements = { 172.16.172.1/26 }
    }
    set VMHost {
        type    ipv4_addr
        flags   interval

        elements = { 172.16.172.1/32 }
    }
    set Gadget {
        type    ipv4_addr
        flags   interval

        elements = { 10.1.10.0/28, 10.2.10.0/28 }
    }
    set BackupHost {
        type    ipv4_addr
        flags   interval

        elements = { 172.16.5.5/32 }
    }

    chain base {
        iif lo                                                                  accept

        ip  saddr 127.0.0.1 ip  daddr 127.0.0.1                                 accept
        ip6 saddr ::1       ip6 daddr ::1                                       accept

        ip frag-off & 0x1fff != 0                                               drop
        ip frag-off & 0x1fff != 0 limit rate 10/minute                  counter accept

        icmpv6  type {
            nd-neighbor-advert,
            nd-neighbor-solicit
        }                                                                       accept

        ip saddr {
            224.0.0.0/8,
            255.255.255.255/32
        }                                                                       drop
        ip daddr {
            0.0.0.0,
            224.0.0.0/8,
            255.255.255.255/32
        }                                                                       drop

        fib daddr type {
            anycast,
            broadcast,
            multicast
        }                                                                       drop

        ct state invalid                                                        drop
        ct state related,established                                    counter accept
    }
    chain input {
        type    filter hook input priority filter
        policy  drop

        icmp    type echo-reply limit rate 1/second                     counter accept
        icmpv6  type echo-reply limit rate 1/second                     counter accept
        icmpv6  type {
            time-exceeded,
            packet-too-big,
            nd-router-advert,
            parameter-problem,
            nd-router-solicit,
            destination-unreachable
        }                                                                       accept
        icmpv6  type {
            mld-listener-done,
            mld-listener-query,
            mld-listener-report,
            mld2-listener-report
        }                       ip6 saddr fe80::/10                             accept

        iifname "vmi0"                                                          accept

        ip saddr @VMNet         ip daddr @VMHost tcp dport 445                  accept
        ip saddr @Gadget        ip daddr @Gadget tcp dport 8050                 accept

        jump    base
    }
    chain output {
        type    filter hook output priority filter
        policy  drop

        jump    base

        icmp    type echo-request ip daddr @VMNet                               accept

        skuid root              icmp    type echo-request limit rate 1/second   accept

        skgid firewall-all                                              counter accept

        skgid firewall-icmp     icmp    type echo-request limit rate 1/second   accept
        skgid firewall-icmp     icmpv6  type echo-request limit rate 1/second   accept

                                tcp dport 445   ip daddr 0.0.0.0/0      counter accept
        skuid root              tcp dport 4443  ip daddr 0.0.0.0/0      counter accept
        skuid root              tcp dport 22    ip daddr @BackupHost            accept

        skuid nm-openvpn        tcp dport 4443 ip daddr 0.0.0.0/0       counter accept

        udp dport       .       meta skuid {
            53          . qemu,
            53          . systemd-resolve,
            123         . systemd-timesync,
            67-68       . root
        }                                                                       accept
        udp dport       .       meta skgid {
            80          . firewall-web,
            443         . firewall-web,
            50000-60000 . firewall-voice
        }                                                               counter accept

        tcp dport       .       meta skuid {
            53          . qemu,
            53          . systemd-resolve,
            80          . root,
            443         . root,
            443         . cups,
            80          . nm-openvpn,
            443         . nm-openvpn,
            11371       . root,
        }                                                               counter accept
        tcp dport       .       meta skgid {
            80          . proxy,
            443         . proxy,
            80          . firewall-web,
            443         . firewall-web,
            8000        . firewall-web,
            8006        . firewall-web,
            8010        . firewall-web,
            8080        . firewall-web,
            8443        . firewall-web,
            22          . firewall-ssh,
            20          . firewall-ftp,
            21          . firewall-ftp,
            22          . firewall-ftp,
            443         . firewall-mail,
            587         . firewall-mail,
            993         . firewall-mail,
            443         . firewall-voice,
            1433        . firewall-db,
            2020        . firewall-ssh,
            3306        . firewall-db,
            3389        . firewall-ctl,
            5900-5910   . firewall-ctl
        }                                                               counter accept
    }
}
