#!/usr/bin/dash
################################
### iDigitalFlame  2016-2024 ###
#                              #
#            -/`               #
#            -yy-   :/`        #
#         ./-shho`:so`         #
#    .:- /syhhhh//hhs` `-`     #
#   :ys-:shhhhhhshhhh.:o- `    #
#   /yhsoshhhhhhhhhhhyho`:/.   #
#   `:yhyshhhhhhhhhhhhhh+hd:   #
#     :yssyhhhhhyhhhhhhhhdd:   #
#    .:.oyshhhyyyhhhhhhddd:    #
#    :o+hhhhhyssyhhdddmmd-     #
#     .+yhhhhyssshdmmddo.      #
#       `///yyysshd++`         #
#                              #
########## SPACEPORT ###########
### Spaceport + SMD
#
# Copyright (C) 2016 - 2024 iDigitalFlame
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

# Enable Strict Mode
set -u

. "/etc/sysconfig.conf" 2> /dev/null
if [ -z "$SYSCONFIG" ]; then
    echo "Error: system configuration directory not found!"
    exit 1
fi
if ! [ -d "$SYSCONFIG" ]; then
    printf 'Error: system configuration directory "%s" does not exist!\n' "$SYSCONFIG"
    exit 1
fi

SYSCONFIG=${SYSCONFIG%/}

if ! [ "$USER" = "root" ]; then
    echo "Error: root is required!"
    exit 1
fi

relink "$SYSCONFIG" /

cp /etc/fstab "${SYSCONFIG}/etc/fstab.nlk"
pacman -Qeqn 1> "${SYSCONFIG}/packages.md"
pacman -Qeqm 1> "${SYSCONFIG}/packages-aur.md"
systemctl list-unit-files | grep "masked" | awk '{print $1}' | sort 1> "${SYSCONFIG}/masked.md"
systemctl list-unit-files | awk '{print $1" "$2}' | grep "enabled" | grep -vE ".target|enabled-runtime" | awk '{print $1}' | sort 1> "${SYSCONFIG}/units.md"
systemctl list-units | grep "@." | grep -vE "dead|exited" | awk '{print $1}' | grep -vE "getty|user|blockdev" | grep "@." | sort 1> "${SYSCONFIG}/indirect.md"

if [ -d "/etc/syscheck.d" ]; then
    for entry in /etc/syscheck.d/*.sh; do
        if [ -f "$entry" ]; then
            printf 'Processing script "%s"..\n' "$entry"
            . "$entry"
        fi
    done
fi

sync
echo "Broken Links Found:"
find / -xtype l -xdev 2> /dev/null | grep -vE "/proc|/tmp|/run"
echo "Done!"
exit 0
